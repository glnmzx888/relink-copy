java.lang.runtimeexception: multiple class instances exist for char[]. null build id: (api .)   steps to reproduce: 1.can supply dumps which exhibit (contact via email) i don't want to have google crawling them :-) 2. 3.   more information: java.lang.runtimeexception: multiple class instances exist for char[] at org.eclipse.mat.hprof.hprofparserhandlerimpl.lookupclassbyname(hprofparserhandlerimpl.java:  at org.eclipse.mat.hprof.pass1parser.readprimitivearraydump(pass1parser.java:  at org.eclipse.mat.hprof.pass1parser.readdumpsegments(pass1parser.java:  at org.eclipse.mat.hprof.pass1parser.read(pass1parser.java:  at org.eclipse.mat.hprof.hprofindexbuilder.fill(hprofindexbuilder.java:  at org.eclipse.mat.parser.internal.snapshotfactoryimpl.parse(snapshotfactoryimpl.java:  at org.eclipse.mat.parser.internal.snapshotfactoryimpl.opensnapshot(snapshotfactoryimpl.java:  at org.eclipse.mat.snapshot.snapshotfactory.opensnapshot(snapshotfactory.java:  at org.eclipse.mat.ui.snapshot.parseheapdumpjob.run(parseheapdumpjob.java:  at org.eclipse.core.internal.jobs.worker.run(worker.java:  mainly this happens if you do more than 1 heap dump from the same process.  meaning the first one will be good, the subsequent ones will cause this error.  seems like it is 90% a jdk bug, but really it should be able to do something with these heap dumps (like realize &quot;oh that is from an earlier dump, ignore it or something&quot;)...   wow! 1st time i see this exception. until now it was &quot;can never happen but just let's be sure&quot; coding...  i'd love to take a look into the heap dump. maybe we can make a guess based on the class loader which loaded the class. it would be a better solution to write a warning to the log and continue loading the dump. sending you an email with a link (too big to u/l and fear the googlebot).  this is 99% a jdk bug.  upgrading from .0_02 (lintel  to .0_11 and using jmap instead of ctrl-/ and the &quot;-dump:format=b,file=heapdump.hprof&quot; option fixed it.  before i discovered this i did some &quot;machiavellian&quot; changes to mat which allowed things to continue to parse, but hovering over the big pie report mostly generated errors.     so i suspect throwing a big &quot;upgrade your jdk, this one isn't good&quot; will probably do the most good. sent the email, let me know if you don't see it. hi oliver,  the problem actually ocurred, because the hprof file contained multiple dumps. i guess you have triggered those dumps via the hprof agent.  i have changed the code in such a way that we read only the first dump and print a message to the log file. if one wants to read an alternative dump, then one has to set a system property. that is a little bit awkward, but, heck, it doesn't happen that often. if it turns out to be a problem, we could think about ui support.   andreas. (runtime exception ) (runtime exception ) (hprof parser handler impl ) (hprof parser handler impl ) (hprof index builder ) (hprof index builder ) (snapshot factory impl ) (snapshot factory impl ) (snapshot factory impl ) (snapshot factory impl ) (snapshot factory ) (snapshot factory ) (parse heap dump job ) (parse heap dump job ) (heap dump ) ( lintel ) ( 32 ) 263148 263148 263148 263148