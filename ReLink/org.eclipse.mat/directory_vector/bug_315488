nullpointerexception with invalid numeric filter. null to reproduce, bring up a histogram then in the &lt;numeric&gt; space type some letters or &gt;abc  java.lang.nullpointerexception at org.eclipse.mat.query.refined.filter$numericfilter.number(filter.java:  at org.eclipse.mat.query.refined.filter$numericfilter.setcriteria(filter.java:  at org.eclipse.mat.ui.internal.viewer.refinedresultviewer$18.updatecriteria(refinedresultviewer.java:  at org.eclipse.mat.ui.internal.viewer.refinedresultviewer$18.handleevent(refinedresultviewer.java:  at org.eclipse.swt.widgets.eventtable.sendevent(eventtable.java:  at org.eclipse.swt.widgets.widget.sendevent(widget.java:  at org.eclipse.swt.widgets.widget.sendevent(widget.java:  at org.eclipse.swt.widgets.widget.sendevent(widget.java:  at org.eclipse.swt.widgets.control.traverse(control.java:  at org.eclipse.swt.widgets.control.translatetraversal(control.java:  at org.eclipse.swt.widgets.display.translatetraversal(display.java:  at org.eclipse.swt.widgets.display.filtermessage(display.java:  at org.eclipse.swt.widgets.display.readanddispatch(display.java:  at org.eclipse.ui.internal.workbench.runeventloop(workbench.java:  at org.eclipse.ui.internal.workbench.runui(workbench.java:  at org.eclipse.ui.internal.workbench.access$4(workbench.java:  at org.eclipse.ui.internal.workbench$4.run(workbench.java:  at org.eclipse.core.databinding.observable.realm.runwithdefault(realm.java:  at org.eclipse.ui.internal.workbench.createandrunworkbench(workbench.java:  at org.eclipse.ui.platformui.createandrunworkbench(platformui.java:  at org.eclipse.mat.ui.rcp.application.start(application.java:  at org.eclipse.equinox.internal.app.eclipseapphandle.run(eclipseapphandle.java:  at org.eclipse.core.runtime.internal.adaptor.eclipseapplauncher.runapplication(eclipseapplauncher.java:  at org.eclipse.core.runtime.internal.adaptor.eclipseapplauncher.start(eclipseapplauncher.java:  at org.eclipse.core.runtime.adaptor.eclipsestarter.run(eclipsestarter.java:  at org.eclipse.core.runtime.adaptor.eclipsestarter.run(eclipsestarter.java:  at sun.reflect.nativemethodaccessorimpl.invoke0(native method) at sun.reflect.nativemethodaccessorimpl.invoke(nativemethodaccessorimpl.java:  at sun.reflect.delegatingmethodaccessorimpl.invoke(delegatingmethodaccessorimpl.java:  at java.lang.reflect.method.invoke(method.java:  at org.eclipse.equinox.launcher.main.invokeframework(main.java:  at org.eclipse.equinox.launcher.main.basicrun(main.java:  at org.eclipse.equinox.launcher.main.run(main.java:  at org.eclipse.equinox.launcher.main.main(main.java:  the fix is trivial - in filter.java the parse method can return null, so the success should be checked before converting to a double. fix is to parse the number, check the parse was successful, and only convert the number (not null) to a double if successful. (null pointer exception ) (null pointer exception ) (numeric filter ) (numeric filter ) (refined result viewer ) (refined result viewer ) (refined result viewer ) (refined result viewer ) (event table ) (event table ) (platform ui ) (platform ui ) (eclipse app handle ) (eclipse app handle ) (eclipse app launcher ) (eclipse app launcher ) (eclipse app launcher ) (eclipse app launcher ) (eclipse starter ) (eclipse starter ) (eclipse starter ) (eclipse starter ) (native method accessor impl ) (native method accessor impl ) (native method accessor impl ) (delegating method accessor impl ) (delegating method accessor impl ) ( invoke ) ( 0 ) 315488 315488 315488 315488