inspectorview enhancement to render imagedata and rgbs. null created <span class="bz_obsolete"><a href="attachment.cgi?id=119989&amp;action=diff" name="attach_119989" title="inspector view patch">attachment 119989</a> <a href="attachment.cgi?id=119989&amp;action=edit" title="inspector view patch">[details]</a></span> inspector view patch  this patch modifies the inspector view to display the image recreated from the imagedata found in a heap. it also displays the appropriate color when an rgb is selected. sweet. that's really cool. this is going in for sure. :-)  i have tested this feature on a couple of eclipse dumps. somehow a lot of the images are &quot;broken&quot;: some are shown only partially, some are somehow gray. do you see the same? hi andreas - no i haven't seen that. i tested against winxp and linux dumps of an rcp app. is there anyway i can grab one of your dumps that shows corruption and take a look? created <span class=""><a href="attachment.cgi?id=120197" name="attach_120197" title="screenshot of sample imagedata">attachment 120197</a> <a href="attachment.cgi?id=120197&amp;action=edit" title="screenshot of sample imagedata">[details]</a></span> screenshot of sample imagedata  hi chris,  see the screenshot above. i'll also make the heap dump available. you'll get a separate email. from looking at the code, i cannot really tell anything.  cheers,  andreas. perhaps the image you're looking at is a mask used to created other images. in other words, it might be correct. i'll know better once i take a look at your heapdump. created <span class=""><a href="attachment.cgi?id=120217&amp;action=diff" name="attach_120217" title="patch with transparency fix">attachment 120217</a> <a href="attachment.cgi?id=120217&amp;action=edit" title="patch with transparency fix">[details]</a></span> patch with transparency fix thanks for the dump andreas. i did find a problem with transparency. as i suspected, i believe some of the images look badly because they're masks.  let me know if the new patch works better for you.  -chris hi chris,  i guess found the difference: when using a hprof dump, the parser does not return a new array each time one calls getvaluearray(). if the array is passed on to the imagedata constructor, it uses it internally and seems to change the data. i realized this when i was going up and down through the list of icons and the icon was changing each time... now most of the icons look fine and the remaining icons are probably masks.  byte[] orig = (byte[]) ((iprimitivearray) object.resolvevalue(&quot;data&quot;)).getvaluearray(); byte[] dataarray = new byte[orig.length]; system.arraycopy(orig, 0, dataarray, 0, orig.length);   andreas. hi andreas, good catch, yeah that makes sense. submitted.  i'd like to blog a/b this on the mat blog once we upload this version. do you have a blog and/or website which i could link to? just www.gstaff.org? yes www.gstaff.org is it, that and google :-) (inspector view ) (image data ) (rg bs ) (image data ) (win xp ) (image data ) (image data ) (image data ) (image data ) (i primitive array ) 258224 258224 258224 258224