top components report is misleading for phd files. null portable heap dump files do not have field names, primitive field values or primitive array values.  the component report from a phd file has a lot of missing information or misleading information. e.g. duplicate strings - many false positives as char arrays have no contents. found 24 occurrences of char[] with at least 10 instances having identical content. total size is 122,160 bytes.  top elements include:  10 x \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u... (8,579 bytes) 147 x \u0000\u0000\u0000\u0000\u0000\u0000 (32 bytes) 24 x \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u... (192 bytes) 67 x \u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u... (40 bytes) 64 x \u0000\u0000\u0000\u0000\u0000 (32 bytes)  this section is worthless for phd files, so should be omitted.   empty collections all the collections are marked as size 0, as no size field is available.  โป empty collections comment no excessive usage of empty collections found.   details  java.util.treemap length # objects shallow heap retained heap  0 2 96 &gt;= 1,296    java.util.identityhashmap length # objects shallow heap retained heap  0 2 80 &gt;= 776    java.util.vector length # objects shallow heap retained heap  0 22 704 &gt;= 2,656    collection fill ratios no sensible information is given as all collections are marked as size 0, so with fill ratio   โป collection fill ratios comment no serious amount of collections with low fill ratios found.   details  java.util.identityhashmap fill ratio # objects shallow heap retained heap  &lt;=  2 80 &gt;= 776    java.util.vector fill ratio # objects shallow heap retained heap  &lt;=  22 704 &gt;= 2,656   map collision ratios no sensible information is given as all collections are marked as size 0, so with collision ratio   โป map collision ratios comment no maps found with collision ratios greater than 80%.   details  java.util.linkedhashmap collision ratio # objects shallow heap retained heap  &lt;=  2 112 &gt;= 432 it is possible to get useful data for collections from phd files.  some java 5 phd files don't have superclass information or object array length data.  commonnameresolver - needs to return null, not &quot;null&quot; for primitive wrapper classes for phds.  wasteinchararraysquery - disable for phds  collection size - using collectionutil.getsize():  vector, arraylist find the backing array by choosing the only object array ref from the collection object. if the field name has dots i.e. is found by resolving several fields then search for plain object refs first, then find an object array ref. then count non-null entries in the array.  consider an optimization - reading object array elements is slow for phds, so consider using outbound refs. these exclude duplicates, but if there is only one outbound ref (the type of the array) or len+1 (all entries are filled with unique values) then we need not go to the elements.  hashmap, hashset, hashtable etc. find the backing array as for arraylist. non-null entries are the nodes, count the nodes, also count chained nodes via references to objects of same type. known superclasses of hashmap, hashtable etc. need to be mentioned in collectionutil for java 5 phd files without superclass data.  linkedhashset etc. as for hashmap etc., but the nodes are also chained via a doubly-linked list, so follow all chained nodes, using a list to handle multiple outbound refs, use a visited bitfield to exclude already visited nodes. also exclude the base node referred to from the collection class.  linkedlist as for linkedhashset etc. but find the header node from the collection, then follow the links from there.  collectionfillratioquery some older java 5 phds have no array length data, so the length is inaccurately reported as just the number of non-null entries. this gives fill ratios &gt;  (as some nodes are chained.) fill ratios &gt;  are possible for real too, so this query should accumulate ratios up to say  before going to double.max_value.  collectionsbysizequery - works when collectionutil getsize works  extractlistvaluesquery extract the head of the list as for collectionutil.getsize the list is doubly linked, so just whichever of the links from a node is not a backwards link to the previous node, until the start is reached. extract the values objects as referenced object which is not a node.  hashentriesquery this should be disabled for phds as the key and value links from the map.entry can't be distinguished.  hashsetvaluequery as for linkedhashset size - the value from a node is an outbound reference, not to its class or another node.  mapcollisionratio uses size and non-null entries in the backing array  primitivearrayswithaconstantvalue - disable for phds i'll make the changes as described.  i do have a concern that this will make the topcomponents report too slow for phd files as calculating the size of a collection now involves a lot of work. is the topcomponents report currently useful just for top consumers/retained set/soft references/weak references ? the finalizer query is missing information too - ibm dumps have gcroot type unfinalized for objects in use which will need to be finalized, and finalizable for ones ready to have their finalizers run. i'll add a -aggressive option to the componentreport and topcomponents queries which for phd files will force empty collections, collection fill ratios and map collision ratios analyses, even though these will take a long time. all fixes done. (tree map ) (identity hash map ) (identity hash map ) (linked hash map ) (common name resolver ) (ph ds ) (waste in char arrays query ) (ph ds ) (collection util ) (array list ) (ph ds ) (hash map ) (hash set ) (array list ) (hash map ) (collection util ) (linked hash set ) (hash map ) (linked list ) (linked hash set ) (collection fill ratio query ) (ph ds ) (collections by size query ) (collection util ) (extract list values query ) (collection util ) (hash entries query ) (ph ds ) (hash set value query ) (linked hash set ) (map collision ratio ) (primitive arrays with a constant value ) (ph ds ) (top components ) (top components ) (gc root ) (component report ) (top components ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) ( u ) ( 0000 ) 308047 308047 308047 308047