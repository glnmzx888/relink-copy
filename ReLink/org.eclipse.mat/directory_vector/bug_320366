top components report fails due to unknown object. null ignoring result of 'top components' due to object 0x2aaabf9e31a0 not found. org.eclipse.mat.snapshotexception: object 0x2aaabf9e31a0 not found. at org.eclipse.mat.parser.internal.snapshotimpl.mapaddresstoid(snapshotimpl.java:  at org.eclipse.mat.snapshot.model.objectreference.getobjectid(objectreference.java:  at org.eclipse.mat.parser.model.abstractobjectimpl.resolvevalue(abstractobjectimpl.java:  at org.eclipse.mat.inspections.collections.collectionutil$info.getsize(collectionutil.java:  at org.eclipse.mat.inspections.collections.collectionsbysizequery.execute(collectionsbysizequery.java:  at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:  at org.eclipse.mat.snapshot.query.snapshotquery.execute(snapshotquery.java:  at org.eclipse.mat.snapshot.query.snapshotquery.refine(snapshotquery.java:  at org.eclipse.mat.inspections.component.componentreportquery.addemptycollections(componentreportquery.java:  at org.eclipse.mat.inspections.component.componentreportquery.execute(componentreportquery.java:  at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:  at org.eclipse.mat.snapshot.query.snapshotquery.execute(snapshotquery.java:  at org.eclipse.mat.inspections.component.topcomponentsreportquery.execute(topcomponentsreportquery.java:  at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:  at org.eclipse.mat.query.registry.commandline.execute(commandline.java:  at org.eclipse.mat.report.internal.querypart.execute(querypart.java:  at org.eclipse.mat.report.testsuite.execute(testsuite.java:  at org.eclipse.mat.report.internal.runregisterdreport.execute(runregisterdreport.java:  at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:  at org.eclipse.mat.ui.queryexecution$executionjob.run(queryexecution.java:  at org.eclipse.core.internal.jobs.worker.run(worker.java:   the problem occurs because a field contains an address of an unknown object. the way the dtfj parser works is that all objects and classes are found initially and are given ids then the outbound references are built. any unknown outbound refs are ignored, but they are visible as addresses, not ids when an object is inspected. a first step is to improve the error message. the objectreference.getobjectid() method throws an exception, and doesn't return &lt;0, so we need to catch the exception and rethrow.  ignoring result of 'top components' due to field 'map' of 'java.util.hashset &#64; 0x2aaabf525450' contains an illegal object reference: 0x2aaabf9e31a0 catching the exception in collectionsbysizequery just leads to another exception later.  java.lang.classcastexception: org.eclipse.mat.parser.model.primitivearrayimpl incompatible with org.eclipse.mat.snapshot.model.iobjectarray     at org.eclipse.mat.inspections.collections.collectionutil$info.getbackingarray(collectionutil.java:      at org.eclipse.mat.inspections.collections.collectionfillratioquery.getfillratio(collectionfillratioquery.java:      at org.eclipse.mat.inspections.collections.collectionfillratioquery.execute(collectionfillratioquery.java:      at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:      at org.eclipse.mat.snapshot.query.snapshotquery.execute(snapshotquery.java:      at org.eclipse.mat.snapshot.query.snapshotquery.refine(snapshotquery.java:      at org.eclipse.mat.inspections.component.componentreportquery.addcollectionfillratios(componentreportquery.java:      at org.eclipse.mat.inspections.component.componentreportquery.execute(componentreportquery.java:      at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:      at org.eclipse.mat.snapshot.query.snapshotquery.execute(snapshotquery.java:      at org.eclipse.mat.inspections.component.topcomponentsreportquery.execute(topcomponentsreportquery.java:      at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:      at org.eclipse.mat.query.registry.commandline.execute(commandline.java:      at org.eclipse.mat.report.internal.querypart.execute(querypart.java:      at org.eclipse.mat.report.testsuite.execute(testsuite.java:      at org.eclipse.mat.report.internal.runregisterdreport.execute(runregisterdreport.java:      at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:      at org.eclipse.mat.ui.queryexecution$executionjob.run(queryexecution.java:      at org.eclipse.core.internal.jobs.worker.run(worker.java:  here is another exception to be handled.  org.eclipse.mat.snapshotexception: field table of java.util.hashmap &#64; 0x2aaaafee0370 contains int[20] &#64; 0x2aaaafee0988 instead of an array of objects as a backing array at org.eclipse.mat.snapshotexception.&lt;init&gt;(snapshotexception.java:  at org.eclipse.mat.inspections.collections.collectionutil$info.getbackingarray(collectionutil.java:  at org.eclipse.mat.inspections.collections.mapcollisionratioquery.getcollisionratio(mapcollisionratioquery.java:  at org.eclipse.mat.inspections.collections.mapcollisionratioquery.execute(mapcollisionratioquery.java:  at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:  at org.eclipse.mat.snapshot.query.snapshotquery.execute(snapshotquery.java:  at org.eclipse.mat.snapshot.query.snapshotquery.refine(snapshotquery.java:  at org.eclipse.mat.inspections.component.componentreportquery.addhashmapscollisionratios(componentreportquery.java:  at org.eclipse.mat.inspections.component.componentreportquery.execute(componentreportquery.java:  at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:  at org.eclipse.mat.snapshot.query.snapshotquery.execute(snapshotquery.java:  at org.eclipse.mat.inspections.component.topcomponentsreportquery.execute(topcomponentsreportquery.java:  at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:  at org.eclipse.mat.query.registry.commandline.execute(commandline.java:  at org.eclipse.mat.report.internal.querypart.execute(querypart.java:  at org.eclipse.mat.report.testsuite.execute(testsuite.java:  at org.eclipse.mat.report.internal.runregisterdreport.execute(runregisterdreport.java:  at org.eclipse.mat.query.registry.argumentset.execute(argumentset.java:  at org.eclipse.mat.ui.queryexecution$executionjob.run(queryexecution.java:  at org.eclipse.core.internal.jobs.worker.run(worker.java:  (snapshot exception ) (snapshot impl ) (snapshot impl ) (object reference ) (object reference ) (abstract object impl ) (abstract object impl ) (collection util ) (collection util ) (collections by size query ) (collections by size query ) (argument set ) (argument set ) (snapshot query ) (snapshot query ) (snapshot query ) (snapshot query ) (component report query ) (component report query ) (component report query ) (component report query ) (argument set ) (argument set ) (snapshot query ) (snapshot query ) (top components report query ) (top components report query ) (argument set ) (argument set ) (command line ) (command line ) (query part ) (query part ) (test suite ) (test suite ) (run registerd report ) (run registerd report ) (argument set ) (argument set ) (query execution ) (execution job ) (query execution ) (object reference ) (hash set ) (collections by size query ) (class cast exception ) (primitive array impl ) (i object array ) (collection util ) (collection util ) (collection fill ratio query ) (collection fill ratio query ) (collection fill ratio query ) (collection fill ratio query ) (argument set ) (argument set ) (snapshot query ) (snapshot query ) (snapshot query ) (snapshot query ) (component report query ) (component report query ) (component report query ) (component report query ) (argument set ) (argument set ) (snapshot query ) (snapshot query ) (top components report query ) (top components report query ) (argument set ) (argument set ) (command line ) (command line ) (query part ) (query part ) (test suite ) (test suite ) (run registerd report ) (run registerd report ) (argument set ) (argument set ) (query execution ) (execution job ) (query execution ) (snapshot exception ) (hash map ) (snapshot exception ) (snapshot exception ) (collection util ) (collection util ) (map collision ratio query ) (map collision ratio query ) (map collision ratio query ) (map collision ratio query ) (argument set ) (argument set ) (snapshot query ) (snapshot query ) (snapshot query ) (snapshot query ) (component report query ) (component report query ) (component report query ) (component report query ) (argument set ) (argument set ) (snapshot query ) (snapshot query ) (top components report query ) (top components report query ) (argument set ) (argument set ) (command line ) (command line ) (query part ) (query part ) (test suite ) (test suite ) (run registerd report ) (run registerd report ) (argument set ) (argument set ) (query execution ) (execution job ) (query execution ) 320366 320366 320366 320366