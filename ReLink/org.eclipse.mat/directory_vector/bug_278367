the archive file doesn't become an english name.. null when international language (ja_jp) is displayed, the archive file doesn't become an english name. created <span class=""><a href="attachment.cgi?id=137625" name="attach_137625" title="screenshot.png">attachment 137625</a> <a href="attachment.cgi?id=137625&amp;action=edit" title="screenshot.png">[details]</a></span> screenshot.png  archive file list made by english display, and archive file list made by japanese display right now, the zip file name consists of (a) the common prefix of the heap dump file (&quot;eclipse&quot; in your case) and (b) the readable heading of the report (in your case the japanese).  what would be the expected behavior? the file name remains fully english? everything translated is difficult because we can make some assumptions based on the common prefix. i think that file name should not depend on the display language.  the file name should always be made an english name.   the developers (american, japanese, etc) cannot share the file analyzed to depend on the display language.  the zip file of a content the same in each display language will be made.  understood.  the zip file contains only static html pages - the intention was to have something distributable via email independent form the (possibly) huge heap dump. one can open the file with any browser - no mat installation required.  right now, the static html will be generated with the language of the current user. therefore sharing across languages is a problem. one would need to re-run the report in his own language. making the static pages &quot;translate&quot; themselves feels like a very heavy solution. i understood that this was a specification. i demand to be going to be improved in the future.  created <span class=""><a href="attachment.cgi?id=141099&amp;action=diff" name="attach_141099" title="tag generated html with the character encoding">attachment 141099</a> <a href="attachment.cgi?id=141099&amp;action=edit" title="tag generated html with the character encoding">[details]</a></span> tag generated html with the character encoding  the file name is based on the internationalized report name and is converted by fileutils.tofilename(). this takes the prefix and 20 characters of the name, replacing characters which are not letters or digits by underscore.  if the name is not translated then we would need to get a fixed name from somewhere. i was also suggest appending the language identifier from the message files used. heapdump_leak_suspects.zip if messages.properties was used, or heapdump_leak_suspects_fr.zip if messages_fr.properties was used, or heapdump_leak_suspects_en_gb.zip if messages_en_gb.properties was used.  we should also put the encoding into the html. &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt; or the native file.encoding.  i've got a patch for that.  perhaps we should also use the html lang tag.  &lt;html lang=&quot;en-gb&quot;&gt; (in reply to <a href="show_bug.cgi?id=278367#c6">comment #6</a>) <span class="quote">&gt; we should also put the encoding into the html. &gt; &lt;meta http-equiv=&quot;content-type&quot; content=&quot;text/html;charset=utf-8&quot;&gt; &gt; or the native file.encoding.</span >  totally agree to adding the encoding. i am not sure a/b which encoding to use: when saving a string value into a text file from the ui, i take system.getproperty(&quot;file.encoding&quot;). so i am okay with that.  <span class="quote">&gt; if the name is not translated then we would need to get a fixed name from &gt; somewhere.</span >  can we use the &quot;id&quot; property of the report? we could improve on the names, but the id is not translated.  &lt;report id=&quot;suspects&quot; name=&quot;%report.suspects.name&quot;     description=&quot;%report.suspects.help&quot;     file=&quot;meta-inf/reports/suspects.xml&quot; /&gt;    <span class="quote">&gt; i was also suggest appending the language identifier from the &gt; message files used.</span >  +1 testsuite.java:  output = new file(output, prefix + &quot;_&quot; + fileutils.tofilename(template.getname(), &quot;zip&quot;)); //$non-nls-1$ //$non-nls-2$  template is a spec  it's quite hard to get a non-translated name at this point - the spec doesn't have it, and is generated from lots of places including:  &lt;section name=&quot;%overview.title&quot;&gt;     &lt;param key=&quot;html.collapsed&quot; value=&quot;false&quot; /&gt;      &lt;query name=&quot;%overview.heap_dump_overview&quot;&gt;         &lt;param key=&quot;html.show_table_header&quot; value=&quot;false&quot; /&gt;         &lt;command&gt;heap_dump_overview&lt;/command&gt;     &lt;/query&gt;  # reports overview.title = system overview  so this might need api changes created <span class=""><a href="attachment.cgi?id=156949&amp;action=diff" name="attach_156949" title="allow file suffix to be specified in report xml">attachment 156949</a> <a href="attachment.cgi?id=156949&amp;action=edit" title="allow file suffix to be specified in report xml">[details]</a></span> allow file suffix to be specified in report xml  here's a way to solve the problem - we add a param to the report xml, then retrieve that param to build the file name.  i'm not sure if the suffix needs to go through the fileutil processing to convert spaces to underscore - is that a platform specific encoding?  also, should testsuite attempt to get the base name of the dump - or should we get the prefix from the snapshotinfo? i've checked in some fixes for this.  the reports now take the suffix from the filename_suffix param     &lt;param key=&quot;filename_suffix&quot; value=&quot;%overview.suffix&quot; /&gt;  this is translatable, if required, separately from the report title.  overview.suffix = system overview  if the user spoke no english, and mat was fully translated, then the user would need the report suffix translated to find the report from the open report dialog. to reduce clutter i've changed the file dialogs to expect reports with an underscore as there is always an underscore between the root and the suffix.  i therefore think it is worth having the capability to translate the file  suffix, but with this fix the plugin.xml file can be adjusted to suit. the report file name is now separately translatable from the report name. (file utils ) (test suite ) (file utils ) (file util ) (test suite ) (snapshot info ) ( heapdump ) ( 123456 ) ( heapdump ) ( 123456 ) ( heapdump ) ( 123456 ) ( c ) ( 6 ) 278367 278367 278367 278367